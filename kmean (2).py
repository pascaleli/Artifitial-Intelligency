# -*- coding: utf-8 -*-
"""Kmean.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R-jHNcEN7vSWYb8O_JV7fY5xqnA36OXX
"""



from google.colab import drive 
drive.mount('/content/drive')

pip install -q keras

"""# New Section"""

import keras

# I AM PULLING cardiacData.txt into my AssignAI variable
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
import numpy as np

AssignAI = '/content/drive/My Drive/AssignAI/'
DATA = np.loadtxt(AssignAI+'data_Seminar-Supervised-Classification-K-NN-Performance-Metrics.txt')
X = DATA[:, 0:2]
y = DATA[:, 2]
plt.figure()
plt.scatter(X[:, 0], X[:, 1], c=y, marker='*')
plt.show()

"""Finding K bY Plotting the elbow"""

# WE THEN SPLIT THE DATA INTO TRAIING(80%) AND TESTING(20%)
from sklearn.model_selection import train_test_split
trainX, testX, trainy, testy = train_test_split(X, y, test_size=0.2, random_state=2)

from sklearn.neighbors import KNeighborsClassifier
model = KNeighborsClassifier(n_neighbors=3)
model.fit(trainX, trainy)


# Let's compute TP, FP, FN AND TN from the confusion_matrix 

from sklearn.metrics import confusion_matrix 
from sklearn.metrics import plot_confusion_matrix
cnf_matrix = confusion_matrix(testy, model.predict(testX))
TP = cnf_matrix[0][0]
FP = cnf_matrix[0][1]
FN = cnf_matrix[1][0]
TN = cnf_matrix[1][1]

# Let's plot the confusion matrix and check the values

class_names=['Negative', 'Positive']
plt.figure()
plot_confusion_matrix(cnf_matrix , classes=class_names, title='confusion metrix')

"""The optimun k from the graph is 5
Now we will do the K-Means Clustering
"""

# SINCE THE ELBOW METHOD SHOWS K TO BE 3 I AM USING IT TO SHOW THE CLUSTERING

#Initializing our KMeans
kmeans = KMeans(n_clusters=3)
#Fitting with inputs
kmeans = kmeans.fit(X)
#Predicting the clusters
labels = kmeans.predict(X)
#Getting the cluster centers
C = kmeans.cluster_centers_

plt.figure()
plt.scatter(X[:, 0], X[:, 1], c=labels)
#plt.scatter(X[:, 0], X[:, 1], c=labels)
plt.scatter(C[:, 0], C[:, 1], marker='*', c='#050505', s=1000)